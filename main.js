'use strict';

window.onload = function() {
    userInput.value = ''; // —á–∏—Å—Ç–∏–º –≤–≤–æ–¥ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    console.log('üë±üèº –¢—Ä—É—Å–µ–≤–∏—á –í–∞–ª–µ—Ä–∏–π')
};

let augend = document.getElementById('augend').innerHTML; // —Å–±–æ—Ä –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è 1 —Å–ª–∞–≥–∞–µ–º–æ–≥–æ
let addend = document.getElementById('addend').innerHTML; // —Å–±–æ—Ä –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è 2 —Å–ª–∞–≥–∞–µ–º–æ–≥–æ
let summary = document.getElementById('summary');
let summaryNum = String(Number(augend) + Number(addend)); // –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –∑–∞–¥–∞–Ω–∏—è –∏–∑ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

let userInput = document.querySelector('input');
let correctAugend = document.createElement('span');
let correctAddend = document.createElement('span');
let solved = document.createElement('span');
let addendInput = document.createElement('div');
let augendInput = document.createElement('input');
let solvingInput = document.createElement('input');
let solving = document.querySelector('.solving');

document.querySelector('input').onkeypress = function(e) {
    if (e.charCode === 0 || e.charCode === 13) { // –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞–≤–∏—à—É Enter –≤ –ø–æ–ª–µ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ
        let firstNum = this.value; // –±–µ—Ä–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        if (firstNum !== augend) { // —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –µ–≥–æ —Å 1 —Å–ª–∞–≥–∞–µ–º—ã–º
            this.style.color = 'red'; // –æ—à–∏–±–∫–∞ 
            document.getElementById('augend').style.backgroundColor = 'orange'; // –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –æ—à–∏–±–∫–∏
        } else {
            this.style.color = ''; 
            userInput.remove(); // —É–±–∏—Ä–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –∑–∞–º–µ–Ω—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
            document.querySelector('.arrow_augend').appendChild(correctAugend).innerHTML = firstNum;
            document.querySelector('.number_line').appendChild(addendInput).classList.add('arrow_addend'); // –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–µ–ª–∫—É
            document.querySelector('.arrow_addend').appendChild(augendInput).classList.add('augendInput'); // –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è —Å—Ç—Ä–µ–ª–∫–∏ 
            document.querySelector('.augendInput').setAttribute('maxlength', '1'); // –≤—ã—Å—Ç–∞–≤–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
            document.getElementById('augend').style.backgroundColor = '';

            document.querySelector('.augendInput').onkeypress = function(e) {
                if (e.charCode === 0 || e.charCode === 13) {
                    let secondNum = this.value;
                    if (secondNum !== addend) {
                        this.style.color = 'red';
                        document.getElementById('addend').style.backgroundColor = 'orange';
                    } else {
                        this.style.color = '';
                        augendInput.remove();
                        document.querySelector('.arrow_addend').appendChild(correctAddend).innerHTML = secondNum;
                        summary.remove();
                        solving.appendChild(solvingInput).classList.add('solving_input');
                        document.querySelector('.solving_input').setAttribute('maxlength', '2');
                        document.getElementById('addend').style.backgroundColor = '';

                        document.querySelector('.solving_input').onkeypress = function(e) {
                            if (e.charCode === 0 || e.charCode === 13) {
                                let result = this.value;
                                if (result !== summaryNum) {
                                    this.style.color = 'red';
                                } else {
                                    this.remove();
                                    document.querySelector('.solving').appendChild(solved).innerHTML = summaryNum;
                                }
                            } else return;
                        }
                    }
                    
                } else return;
            }

        }
    } else return;
};
